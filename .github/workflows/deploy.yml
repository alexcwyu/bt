name: Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        cibuildwheel:
          - "cp39"
          - "cp310"
          - "cp311"
          - "cp312"
          - "cp313"
        exclude:
          - python-version: "3.9"
            cibuildwheel: "cp310"
          - python-version: "3.9"
            cibuildwheel: "cp311"
          - python-version: "3.9"
            cibuildwheel: "cp312"
          - python-version: "3.9"
            cibuildwheel: "cp313"
          - python-version: "3.10"
            cibuildwheel: "cp39"
          - python-version: "3.10"
            cibuildwheel: "cp311"
          - python-version: "3.10"
            cibuildwheel: "cp312"
          - python-version: "3.10"
            cibuildwheel: "cp313"
          - python-version: "3.11"
            cibuildwheel: "cp39"
          - python-version: "3.11"
            cibuildwheel: "cp310"
          - python-version: "3.11"
            cibuildwheel: "cp312"
          - python-version: "3.11"
            cibuildwheel: "cp313"
          - python-version: "3.12"
            cibuildwheel: "cp39"
          - python-version: "3.12"
            cibuildwheel: "cp310"
          - python-version: "3.12"
            cibuildwheel: "cp311"
          - python-version: "3.12"
            cibuildwheel: "cp313"
          - python-version: "3.13"
            cibuildwheel: "cp39"
          - python-version: "3.13"
            cibuildwheel: "cp310"
          - python-version: "3.13"
            cibuildwheel: "cp311"
          - python-version: "3.13"
            cibuildwheel: "cp312"

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        make develop
        python -m pip install -U wheel twine setuptools

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.23.2

    - name: Python Wheel Steps (Linux - cibuildwheel)
      run: python -m cibuildwheel --output-dir dist
      env:
        CIBW_BUILD: "${{ matrix.cibuildwheel }}-manylinux*"
        CIBW_BUILD_VERBOSITY: 3
      if: ${{ runner.os == 'Linux' }}

    - name: Python Build Steps (Macos)
      run: python -m cibuildwheel --output-dir dist
      env:
        CIBW_BUILD: "${{ matrix.cibuildwheel }}-macos*"
        CIBW_ARCHS_MACOS: x86_64 arm64
        CIBW_BUILD_VERBOSITY: 3
      if: ${{ matrix.os == 'macos-latest' }}

    - name: Python Build Steps (Windows)
      run: python -m cibuildwheel --output-dir dist
      env:
        CIBW_BUILD: "${{ matrix.cibuildwheel }}-win_amd64"
      if: ${{ matrix.os == 'windows-latest' }}

    - name: Check Wheels
      run: twine check dist/*

    - name: Upload Wheel
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}
        path: dist/*.whl

    # - name: Publish distribution ðŸ“¦ to PyPI
    #   if: ${{ startsWith(github.ref, 'refs/tags') && matrix.os != 'ubuntu-latest' }}
    #   env:
    #     TWINE_USERNAME: ${{ secrets.PYPI_UN }}
    #     TWINE_PASSWORD: ${{ secrets.PYPI_PW }}
    #   run: make upload
  build_sdist:
    strategy:
      matrix:
        os:
          - ubuntu-22.04
        python-version:
          - 3.9

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: make develop

      - name: Python SDist Steps
        run: python setup.py sdist

      - name: Check sdist
        run: twine check dist/*.tar.gz

      - name: Upload SDist
        uses: actions/upload-artifact@v4
        with:
            name: sdist
            path: dist/*.tar.gz
